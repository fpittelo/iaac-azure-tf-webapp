##### Destroy Pipeline ######################

trigger: none

schedules:
- cron: "0 23 * * *" # This is 11 PM UTC, which corresponds to midnight CET (UTC+1).
  displayName: Daily Midnight Run CET
  branches:
    include:
    - dev # Replace with the branch you want to build
  always: true

pool:
  vmImage: ubuntu-latest

variables:
  rg_group: 'LABS'
  sa_name: 'iaaclabs'
  cont_name: 'iaacazuretfwebapp'
  storage_key: 'terraform.tfstate'

stages:
  - stage: destroy
    jobs:
      - job: destroy
        steps:
          - task: AzureCLI@2
            displayName: 'Azure CLI Login'
            inputs:
              azureSubscription: 'iaac-service' # Replace with your Azure service connection name
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Check if Key Vault exists
                echo "Checking if Key Vault exists..."
                exists=$(az keyvault list --query "[?name=='iaac-webapp-vault'].name" -o tsv)
                if [ "$exists" != "" ]; then
                  echo "Deleting Key Vault..."
                  az keyvault delete --name iaac-webapp-vault
                  echo "Purging Key Vault..."
                  az keyvault purge --name iaac-webapp-vault
                else
                  echo "Key Vault not found or already deleted."
                fi          
          - task: TerraformInstaller@0
            displayName: install
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'iaac-service'
              backendAzureRmResourceGroupName: 'LABS'
              backendAzureRmStorageAccountName: 'iaaclabs'
              backendAzureRmContainerName: 'iaacazuretfwebapp'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV3@3
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'iaac-service'
          - task: TerraformTaskV3@3
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              environmentServiceNameAzureRM: 'iaac-service'
